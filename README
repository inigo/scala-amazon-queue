Client code for using Amazon SQS to process files in Amazon S3.

Usage
=====

The purpose of this library is to make it easy to process a set of files
stored on Amazon S3, potentially via a number of separate processors each
working in parallel and getting the next file to process via Amazon SQS.

Expected flow:
    From a local computer, use QueuePreparer#transferToStore to upload a
    local directory of files to Amazon S3, then use QueuePreparer#populateQueue
    to add each of them to an Amazon SQS queue.

    From a number of other computers (perhaps Amazon EC2 instances), repeatedly use
    QueueConsumer#processNextIdentifier to retrieve the next item to process,
    passing in an appropriate function to act on it.

Setup
=====

This library is deployed to Maven Central - get it with:

        <dependency>
            <groupId>net.surguy</groupId>
            <artifactId>scala-amazon-queue</artifactId>
            <version>0.3</version>
        </dependency>

Before using, create a credentials file at src/main/resources/AwsCredentials.properties, with the content:
    accessKey=[your AWS access key]
    secretKey={your AWS secret key]

(you can get the keys from Amazon via http://aws.amazon.com/account/)

Build
=====

The app is Scala, built with Maven. Build with "mvn install".

License
=======

Copyright (C) 2013 Inigo Surguy. Licensed under the GNU General Public License v3 - see LICENSE.txt for details.

This program is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

This program is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with this program.  If not, see <http://www.gnu.org/licenses/>.

